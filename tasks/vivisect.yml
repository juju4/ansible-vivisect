---

# - name: git clone vivisect
#   git:
#     repo=https://github.com/fireeye/flare-vivisect.git
#     dest={{ toolsetdir }}/vivisect
#     version={{ vivisect_version }}

- name: System pip
  when: vivisect_virtualenv_path is not defined or not vivisect_virtualenv_path
  block:
    - name: Python dependencies
      ansible.builtin.package:
        name: "{{ item }}"
        state: "present"
      with_items: "{{ vivisect_deps }}"
      register: pkg_result
      until: pkg_result is success

    - name: Remove Python conflicting dependencies
      ansible.builtin.package:
        name: "{{ item }}"
        state: "absent"
      with_items: "{{ vivisect_deps_conflict | default([]) }}"

    - name: Python externally managed
      ansible.builtin.import_tasks: python-externally-managed.yml

    - name: Install vivisect with pip
      ansible.builtin.pip:
        name: "{{ vivisect_pip_module }}"
        state: present
        executable: "{{ vivisect_pip }}"
      register: pkg_result
      until: pkg_result is success

- name: Virtualenv pip
  when: vivisect_virtualenv_path is defined and vivisect_virtualenv_path
  block:
    - name: Virtualenv package dependencies
      ansible.builtin.package:
        name: "{{ item }}"
        state: "present"
      with_items: "{{ vivisect_deps + [vivisect_virtualenv] }}"
      register: pkg_result
      until: pkg_result is success
    ## https://github.com/pypa/virtualenv/issues/463
    - name: Virtualenv pip dependencies
      ansible.builtin.pip:
        name: "{{ vivisect_pip_virtualenv }}"
        state: present
      register: pkg_result
      until: pkg_result is success
      when: vivisect_pip_virtualenv != []
    - name: Ensure virtualenv user exists - {{ vivisect_virtualenv_user }}
      ansible.builtin.user:
        name: "{{ vivisect_virtualenv_user }}"
        home: "{{ vivisect_virtualenv_home }}"
        state: present
      when: vivisect_virtualenv_user != 'root' and vivisect_virtualenv_user != 'nobody' and vivisect_virtualenv_user != 'www-data'
    - name: Install vivisect python bindings - virtualenv
      ansible.builtin.pip:
        name: "{{ vivisect_pip_module }}"
        state: present
        virtualenv: "{{ vivisect_virtualenv_path }}"
        virtualenv_command: "{{ vivisect_vcommand | default('virtualenv') }}"
        virtualenv_python: "{{ vivisect_python }}"
      become: yes
      become_user: "{{ vivisect_virtualenv_user }}"
      register: pkg_result
      until: pkg_result is success

      ## FIXME! not idempotent
      # - name: ensure right permissions
      #   file: "dest={{ vivisect_virtualenv_path }} state=directory owner={{ vivisect_virtualenv_user }} recurse=yes"
